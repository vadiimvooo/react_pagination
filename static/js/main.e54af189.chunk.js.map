{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","numberOfPages","className","cn","disabled","href","onClick","map","page","active","items","App","useState","setPage","select","setSelect","startItems","endItems","visibleItems","slice","id","value","onChange","event","Number","target","htmlFor","p","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAgBd,EAAW,EAAGW,GAEpC,OACE,qBAAII,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAAUR,EAAc,IAAM,IAHpC,SAME,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACa,IAAhBV,GACFC,EAAa,SAPnB,oBAcDI,EAAcM,KAAI,SAAAC,GAAI,OACrB,oBACEN,UAAWC,IACT,YACA,CAAEM,OAAQb,IAAgBY,IAH9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,KAREA,MAaT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUR,IAAgBE,IAHhC,SAME,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WACHV,IAAgBE,GAClBD,EAAa,SAPnB,wBC5DFa,EAAQvB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEPoB,EAAgB,WAC3B,MAAwBC,mBAAS,GAAjC,mBAAOJ,EAAP,KAAaK,EAAb,KACA,EAA4BD,mBAAS,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAaR,EAAOM,EAASA,EAC7BG,EAAWT,EAAOM,GAAU,GAAKN,EAAOM,EAAS,GAEjDI,EAAeR,EAAMS,MAAMH,EAAYC,GAgB7C,OACE,sBAAKf,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWM,EADX,mBAC0BQ,EAAa,EADvC,cAC8CC,EAD9C,aAIA,sBAAKf,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRkB,GAAG,kBACHlB,UAAU,eACVmB,MAAOP,EACPQ,SAAU,SAACC,GACTR,EAAUS,OAAOD,EAAME,OAAOJ,QAC9BR,EAAQ,IAPZ,UAUE,wBAAQQ,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBxB,UAAU,qBAA3C,+BAOF,cAAC,EAAD,CACER,MAAO,GACPC,QAASmB,EACTlB,YAAaY,EACbX,aApDmB,SAAC8B,GACP,kBAANA,GACTd,EAAQc,GAGA,SAANA,GACFd,EAAQL,EAAO,GAGP,SAANmB,GACFd,EAAQL,EAAO,MA6Cf,6BACGU,EAAaX,KAAI,SAAAqB,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SAAoBA,aCxE9BC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e54af189.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import cn from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number | string) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const numberOfPages = getNumbers(1, lastPage);\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage - 1 === 0 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange('prev');\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {numberOfPages.map(page => (\n        <li\n          className={cn(\n            'page-item',\n            { active: currentPage === page },\n          )}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === lastPage },\n        )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={() => {\n            if (currentPage !== lastPage) {\n              onPageChange('next');\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [page, setPage] = useState(1);\n  const [select, setSelect] = useState(5);\n\n  const startItems = page * select - select;\n  const endItems = page * select <= 42 ? page * select : 42;\n\n  const visibleItems = items.slice(startItems, endItems);\n\n  const handlePageChange = (p: number | string) => {\n    if (typeof p === 'number') {\n      setPage(p);\n    }\n\n    if (p === 'prev') {\n      setPage(page - 1);\n    }\n\n    if (p === 'next') {\n      setPage(page + 1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${startItems + 1} - ${endItems} of 42)`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={select}\n            onChange={(event) => {\n              setSelect(Number(event.target.value));\n              setPage(1);\n            }}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      {/* Move this markup to Pagination */}\n\n      <Pagination\n        total={42}\n        perPage={select}\n        currentPage={page}\n        onPageChange={handlePageChange}\n      />\n\n      <ul>\n        {visibleItems.map(item => (\n          <li data-cy=\"item\">{item}</li>\n        ))}\n\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}